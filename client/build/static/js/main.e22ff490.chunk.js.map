{"version":3,"sources":["components/common/TopHeader.js","api/index.js","api/stores.ts","constants/index.js","redux/actions/actStore.js","components/dashboard/dashboard.js","components/store/StoreList.js","components/common/TextInput.js","components/store/StoreForm.js","components/store/StoreCreate.js","types/fileUploadState.ts","components/store/StoreImage.js","components/store/StoreEdit.js","components/common/Modal.js","components/store/StoreDelete.js","components/category/categoryList.js","redux/actions/actCategory.js","components/category/categoryNew.js","auth/auth.js","components/callback.js","App.js","redux/reducers/index.js","redux/reducers/storeReducers.js","redux/reducers/categoryReducers.js","redux/reducers/allstoreReducers.js","index.js"],"names":["TopHeader","this","props","auth","login","logout","isAuthenticated","className","to","onClick","Component","axios","create","baseURL","getAllStoreList","last","ax","get","getUploadUrl","storeId","a","console","log","post","headers","Authorization","getAccessToken","response","data","uploadUrl","uploadFile","file","put","fetchStore","dispatch","type","constants","payload","findStoreById","stores","find","store","StoreId","Dashboard","fetchAllStores","allstores","Items","map","imageUrl","attachmentUrl","storeName","name","charAt","toUpperCase","slice","key","src","width","height","alt","address","phone","param","LastEvaluatedKey","nextKey","handleNext","renderList","renderButton","React","connect","state","ownProps","items","StoreList","fetchStores","length","editLink","deleteLink","ref","wrapper","TextInput","htmlFor","id","label","onChange","placeholder","value","StoreForm","onSubmit","notes","StoreCreate","useState","setStore","event","updatedStore","target","preventDefault","createStore","then","history","push","StoreImage","imageLocalPath","uploadState","UploadState","imageInfo","setImage","onImageSubmit","alert","setUploadState","message","updatedImage","Form","Field","accept","files","match","params","useEffect","patch","updateStore","Modal","ReactDOM","createPortal","onDismiss","e","stopPropagation","title","content","actions","document","querySelector","Fragment","delete","CategoryList","fetchCategory","categories","category","CategoryNew","Auth","auth0","authorize","clearSession","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","error","expiredAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","process","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","removeItem","getItem","parse","Error","Callback","test","location","hash","App","path","exact","render","combineReducers","action","newState","concat","reducers","applyMiddleware","thunk","StrictMode","component","getElementById"],"mappings":"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","file":"static/js/main.e22ff490.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass TopHeader extends Component {\n  render() {\n    const { login, logout, isAuthenticated } = this.props.auth;\n\n    return (\n      <div className=\"ui menu top \">\n        <div className=\"item\">\n          <Link to=\"/\">Home</Link>\n        </div>\n        {isAuthenticated() ? (\n          <div className=\"item\">\n            <Link to=\"/stores\">Store</Link>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        {isAuthenticated() ? (\n          <div className=\"item\">\n            <Link to=\"/categories\">Category</Link>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"item right\">\n          {!isAuthenticated() ? (\n            <button onClick={login}>Login</button>\n          ) : (\n            <button onClick={logout}>Logout</button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TopHeader;\n","import axios from \"axios\";\nexport default axios.create({\n  baseURL: \"https://j9qmzclk8i.execute-api.us-east-1.amazonaws.com/dev\",\n});\n","import ax from \"./index\";\nimport Auth from \"../auth/auth\";\nimport { StoreItem } from \"../types/store\";\n\nexport function getStoreList(auth: Auth) {\n  return ax.get(\"/stores\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${auth.getAccessToken()}`,\n    },\n  });\n}\n\nexport function getAllStoreList(last: string) {\n  if (!last || last === null) last = \"null\";\n  return ax.get(\"/allstores/\" + last);\n}\n\nexport function getStore(auth: Auth, storeId: string) {\n  console.log(\"action: getStore api \", auth, storeId);\n  return ax.get(\"/stores/\" + storeId, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${auth.getAccessToken()}`,\n    },\n  });\n}\n\nexport function createStore(auth: Auth, store: StoreItem) {\n  return ax.post(\"/stores\", store, {\n    headers: {\n      Authorization: `Bearer ${auth.getAccessToken()}`,\n    },\n  });\n}\n\nexport function updateStore(auth: Auth, store: StoreItem) {\n  console.log(store);\n  return ax.patch(\"/stores/\" + store.StoreId, store, {\n    headers: {\n      Authorization: `Bearer ${auth.getAccessToken()}`,\n    },\n  });\n}\n\nexport function deleteStore(auth: Auth, StoreId: string) {\n  console.log(StoreId);\n  return ax.delete(\"/stores/\" + StoreId, {\n    headers: {\n      Authorization: `Bearer ${auth.getAccessToken()}`,\n    },\n  });\n}\n\nexport async function getUploadUrl(\n  auth: Auth,\n  storeId: string\n): Promise<string> {\n  console.log(\"getting upload URL\");\n\n  const response = await ax.post(`/stores/${storeId}/attachment`, \"\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${auth.getAccessToken()}`,\n    },\n  });\n  return response.data.uploadUrl;\n}\n\nexport async function uploadFile(\n  uploadUrl: string,\n  file: Buffer\n): Promise<void> {\n  await ax.put(uploadUrl, file);\n}\n","export default {\n  FETCH_ALL_STORE: \"FETCH_ALL_STORE\",\n\n  FETCH_STORE_LIST: \"FETCH_STORE_LIST\",\n  ADD_STORE: \"ADD_STORE\",\n  FETCH_STORE: \"FETCH_STORE\",\n\n  FETCH_CATEGORY_LIST: \"FETCH_CATEGORY_LIST\",\n  ADD_CATEGORY: \"ADD_CATEGORY\",\n};\n","import { getStoreList, getStore, getAllStoreList } from \"../../api/stores\";\nimport constants from \"../../constants\";\n\nexport const fetchStores = (props) => async (dispatch) => {\n  console.log(\"actioning fetchStoreList\");\n  const response = await getStoreList(props.auth);\n  dispatch({\n    type: constants.FETCH_STORE_LIST,\n    payload: response.data,\n  });\n};\n\nexport const fetchAllStores = (last) => async (dispatch) => {\n  console.log(\"actioning fetchStoreAllList\");\n  const response = await getAllStoreList(last);\n  dispatch({\n    type: constants.FETCH_ALL_STORE,\n    payload: response.data,\n  });\n};\n\nexport const addStore = () => async (dispatch) => {\n  console.log(\"actioning addStore\");\n};\n\nexport const fetchStore = (props) => async (dispatch) => {\n  console.log(\"actioning fetchStore\", props);\n  const response = await getStore(props.auth, props.storeId);\n\n  dispatch({\n    type: constants.FETCH_STORE,\n    payload: response.data,\n  });\n};\n\nexport function findStoreById(stores, storeId) {\n  if (stores) return stores.find((store) => store.StoreId === storeId) || null;\n  else return null;\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchAllStores } from \"../../redux/actions/actStore\";\n//import { Link } from \"react-dom\";\n\nclass Dashboard extends React.Component {\n  componentDidMount() {\n    console.log(\"Mounting dashboard\");\n    console.log(this.props);\n\n    this.props.fetchAllStores(\"\");\n  }\n\n  renderList() {\n    console.log(\"Rendering List\");\n    console.log(this.props);\n    if (!this.props.allstores) {\n      return <div>Loading...</div>;\n    } else {\n      return this.props.allstores.Items.map((store) => {\n        const imageUrl = store.attachmentUrl\n          ? store.attachmentUrl\n          : \"https://direktori-store-images-dev.s3.amazonaws.com/default-store.png\";\n        const storeName =\n          store.name.charAt(0).toUpperCase() + store.name.slice(1);\n        return (\n          <div className=\"ui centered card\" key={store.StoreId}>\n            <div className=\"image\">\n              <div className=\"center aligned\">\n                <img src={imageUrl} width=\"250\" height=\"250\" alt=\"No Store\" />\n              </div>\n            </div>\n            <div className=\"content\">\n              <div className=\"header\">{storeName}</div>\n              <div className=\"description\">{store.address}</div>\n            </div>\n            <div className=\"extra content\">\n              <span className=\"right floated\">\n                {store.phone ? store.phone : \"none\"}\n              </span>\n            </div>\n          </div>\n        );\n      });\n    }\n  }\n\n  handleNext(param) {\n    console.log(\"next handle:\", param);\n    param.fetchAllStores(param.allstores.LastEvaluatedKey.StoreId);\n  }\n\n  renderButton(nextKey) {\n    if (nextKey) {\n      return (\n        <button\n          className=\"ui button\"\n          onClick={() => {\n            this.handleNext(this.props);\n          }}\n        >\n          More...\n        </button>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n  render() {\n    const nextKey = this.props.allstores\n      ? this.props.allstores.LastEvaluatedKey\n      : \"\";\n\n    return (\n      <div className=\"ui segment\">\n        <div className=\"ui link cards\">{this.renderList()}</div>\n        <div className=\"ui basic segment\">{this.renderButton(nextKey)}</div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  console.log(\"AllStore:mapping store to props\", ownProps, state);\n  if (state.allstores)\n    return {\n      allstores: state.allstores.items,\n    };\n  else return {};\n}\n\nexport default connect(mapStateToProps, { fetchAllStores })(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStores } from \"../../redux/actions/actStore\";\nimport { Link } from \"react-router-dom\";\n//import { deleteStore } from \"../../api/stores\";\n\nclass StoreList extends React.Component {\n  componentDidMount() {\n    console.log(\"mounting Storelist\");\n    this.props.fetchStores(this.props);\n  }\n\n  renderList() {\n    if (!this.props.stores.items) {\n      return <div>Loading...</div>;\n    } else {\n      if (this.props.stores.items.length > 0)\n        return this.props.stores.items.map((store) => {\n          const editLink = \"/stores/\" + store.StoreId + \"/edit\";\n          const deleteLink = \"/stores/\" + store.StoreId + \"/delete\";\n          const imageUrl = store.attachmentUrl\n            ? store.attachmentUrl\n            : \"https://direktori-store-images-dev.s3.amazonaws.com/default-store.png\";\n          //const deleteText = \"Are you sure you want to delete \" + store.name;\n          return (\n            <div className=\"item\" key={store.StoreId}>\n              <i>\n                <div className=\"ui grid\">\n                  <div className=\"two wide column\">\n                    <img src={imageUrl} width=\"50\" height=\"50\" alt=\"No Store\" />\n                  </div>\n                  <div className=\"six wide column\">\n                    <div className=\"description\">\n                      <h3>{store.name}</h3>\n                      <p>\n                        {store.phone}\n                        <br />\n                        {store.address}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"four wide column\">\n                    <div>\n                      <div className=\"ui button\">\n                        <Link to={editLink}>Edit</Link>\n                      </div>\n                      <div className=\"ui button\">\n                        <Link to={deleteLink}>Delete</Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </i>\n            </div>\n          );\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"ui segment\" ref={this.wrapper}>\n        <div className=\"ui raised segment\">My Stores</div>\n        <div className=\"ui button\">\n          <Link to=\"/stores/new\" className=\"button item\">\n            New Store\n          </Link>\n        </div>\n        <div className=\"ui segment\">{this.renderList()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"StoreList:mapping store to props\", state);\n  return { stores: state.stores };\n};\n\nexport default connect(mapStateToProps, { fetchStores })(StoreList);\n","import React from \"react\";\n\nfunction TextInput(props) {\n  return (\n    <div className=\"field\">\n      <label htmlFor={props.id}>{props.label}</label>\n      <input\n        id={props.id}\n        type={props.type ? props.type : \"text\"}\n        onChange={props.onChange}\n        name={props.id}\n        placeholder={props.placeholder}\n        value={props.value}\n\n      />\n    </div>\n  );\n}\n\nexport default TextInput;","import React from \"react\";\nimport TextInput from \"../common/TextInput\";\n\nfunction StoreForm(props) {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div className=\"ui segment\">\n        <TextInput\n          id=\"name\"\n          label=\"Store Name\"\n          onChange={props.onChange}\n          value={props.store.name}\n        />\n        <TextInput\n          id=\"address\"\n          label=\"Address\"\n          onChange={props.onChange}\n          value={props.store.address}\n        />\n        <TextInput\n          id=\"phone\"\n          label=\"Telephone\"\n          onChange={props.onChange}\n          value={props.store.phone}\n        />\n        <TextInput\n          id=\"notes\"\n          label=\"Notes\"\n          value={props.store.notes}\n          onChange={props.onChange}\n        />\n      </div>\n      <input type=\"Submit\" className=\"ui button\"></input>\n    </form>\n  );\n}\n\nexport default StoreForm;\n","import React, { useState } from \"react\";\nimport StoreForm from \"./StoreForm\";\nimport { createStore } from \"../../api/stores\";\n\nconst StoreCreate = (props) => {\n  const [store, setStore] = useState({\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    notes: \"\",\n  });\n\n  function handleChange(event) {\n    const updatedStore = { ...store, [event.target.name]: event.target.value };\n    setStore(updatedStore);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    console.log(props);\n    console.log(store);\n    createStore(props.auth, store).then(() => {\n      props.history.push(\"/stores/\");\n    });\n    console.log(\"submitted\");\n  }\n  return (\n    <div className=\"ui segment\">\n      <div className=\"ui form\">\n        <div className=\"ui segment header\">Store Create</div>\n\n        <StoreForm\n          store={store}\n          onChange={handleChange}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default StoreCreate;\n","export default {\n  NoUpload: \"UPLOAD_NOUPLOAD\",\n  FetchingPresignedUrl: \"UPLOAD_FETCHURL\",\n  UploadingFile: \"UPLOAD_UPLOADING\",\n};\n","import React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport UploadState from \"../../types/fileUploadState\";\nimport { getUploadUrl, uploadFile } from \"../../api/stores\";\n\nfunction StoreImage(props) {\n  const [imageInfo, setImage] = useState({\n    imageUrl: \"\",\n    imageLocalPath: null,\n    StoreId: props.store.StoreId,\n    uploadState: UploadState.NoUpload,\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log(props);\n    if (props.onImageSubmit) return props.onImageSubmit();\n    try {\n      if (!imageInfo.imageLocalPath) {\n        alert(\"File should be selected\");\n        return;\n      }\n\n      setUploadState(UploadState.FetchingPresignedUrl);\n      const uploadUrl = await getUploadUrl(props.auth, props.store.StoreId);\n\n      setUploadState(UploadState.UploadingFile);\n      await uploadFile(uploadUrl, imageInfo.imageLocalPath);\n\n      alert(\"File was uploaded!\");\n    } catch (e) {\n      alert(\"Could not upload a file: \" + e.message);\n    } finally {\n      setUploadState(UploadState.NoUpload);\n    }\n  }\n\n  function setUploadState(state) {\n    const updatedImage = {\n      ...imageInfo,\n      uploadState: state,\n    };\n    setImage(updatedImage);\n  }\n  /*\n  function handleChange(event) {\n    if (props.onChange) return props.onChange();\n    const updatedImage = {\n      ...imageInfo,\n      [event.target.name]: event.target.value,\n    };\n    setImage(updatedImage);\n  }\n\n*/\n\n  function handleFileChange(event) {\n    const files = event.target.files;\n    console.log(files);\n    if (!files) return;\n    const updatedImage = {\n      ...imageInfo,\n      imageLocalPath: files[0],\n    };\n    setImage(updatedImage);\n  }\n\n  if (!props.store.StoreId) return <div></div>;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Field>\n        <label>File</label>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          placeholder=\"Image to upload\"\n          onChange={handleFileChange}\n        />\n      </Form.Field>\n      <input type=\"Submit\" className=\"ui button\"></input>\n    </Form>\n  );\n}\n\nexport default StoreImage;\n","import React, { useState, useEffect } from \"react\";\nimport StoreForm from \"./StoreForm\";\nimport { fetchStore, findStoreById } from \"../../redux/actions/actStore\";\nimport { connect } from \"react-redux\";\nimport { updateStore } from \"../../api/stores\";\nimport StoreImage from \"./StoreImage\";\n\nfunction StoreEdit(props) {\n  const [store, setStore] = useState({ ...props.store });\n\n  useEffect(() => {}, [store]);\n\n  function handleChange(event) {\n    const updatedStore = {\n      ...store,\n      [event.target.name]: event.target.value,\n    };\n    setStore(updatedStore);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    //console.log(store);\n    updateStore(props.auth, store).then(() => {\n      props.history.push(\"/stores/\");\n    });\n    //createStore(props.auth, store);\n    console.log(\"submitted\");\n  }\n\n  if (!store) {\n    return <div>loading</div>;\n  } else {\n    return (\n      <div className=\"ui segment\">\n        <div className=\"ui form\">\n          <div className=\"ui segment header\">Store Edit</div>\n\n          <StoreForm\n            store={store}\n            onChange={handleChange}\n            onSubmit={handleSubmit}\n          />\n          <StoreImage store={store} auth={props.auth} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  console.log(\"StoreEdit:mapping store to props\", state);\n\n  const storeId = ownProps.match.params.StoreId;\n\n  return { store: findStoreById(state.stores.items, storeId) };\n}\n\nexport default connect(mapStateToProps, { fetchStore })(StoreEdit);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\n      <div\n        onClick={(e) => e.stopPropagation()}\n        className=\"ui standard modal visible active\"\n      >\n        <div className=\"header\">\n          {props.title ? props.title : \"Are You Sure\"}\n        </div>\n        <div className=\"content\">{props.content ? props.content : \"...\"} </div>\n        <div className=\"actions\">{props.actions}</div>\n      </div>\n    </div>,\n    document.querySelector(\"#modal\")\n  );\n};\n\nexport default Modal;\n","import React, { useEffect } from \"react\";\nimport Modal from \"../common/Modal\";\nimport { fetchStore, findStoreById } from \"../../redux/actions/actStore\";\nimport { connect } from \"react-redux\";\nimport { deleteStore } from \"../../api/stores\";\n\nfunction StoreDelete(props) {\n  //  const [store, setStore] = useState({ ...props.store });\n\n  useEffect(() => {});\n\n  const actions = (\n    <React.Fragment>\n      <button\n        className=\"ui negative button\"\n        value={props.match.params.StoreId}\n        onClick={handleDelete}\n      >\n        Delete\n      </button>\n      <button\n        className=\"ui button\"\n        onClick={() => props.history.push(\"/stores\")}\n      >\n        Cancel\n      </button>\n    </React.Fragment>\n  );\n\n  function handleDelete(e) {\n    console.log(e.target.value);\n    deleteStore(props.auth, e.target.value).then(() =>\n      props.history.push(\"/stores\")\n    );\n  }\n\n  console.log(props);\n  return (\n    <div>\n      StoreDelete\n      <Modal\n        {...props}\n        actions={actions}\n        onDismiss={() => props.history.push(\"/stores\")}\n        content={`Are you sure you want to delete ${props.store.name}`}\n      />\n    </div>\n  );\n}\nfunction mapStateToProps(state, ownProps) {\n  console.log(\"StoreDelete:mapping store to props\", state);\n\n  const storeId = ownProps.match.params.StoreId;\n\n  return { store: findStoreById(state.stores.items, storeId) };\n}\n\nexport default connect(mapStateToProps, { fetchStore })(StoreDelete);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCategory } from \"../../redux/actions/actCategory\";\nimport { Link } from \"react-router-dom\";\n\nclass CategoryList extends React.Component {\n  componentDidMount() {\n    console.log(\"mounting Categorylist\");\n    console.log(this.props);\n    this.props.fetchCategory(this.props);\n  }\n\n  renderList() {\n    if (!this.props.categories) {\n      return <div>Loading...</div>;\n    } else {\n      console.log(this.props.categories);\n      return this.props.categories.map((category) => {\n        return (\n          <div className=\"item\" key={category.id}>\n            <i>\n              <div className=\"ui grid\">\n                <div className=\"eight wide column\">\n                  <div className=\"description\">\n                    <h3>{category.name}</h3>\n                    <p>{category.notes}</p>\n                  </div>\n                </div>\n              </div>\n            </i>\n          </div>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <div className=\"ui raised segment\"> Category list</div>\n        <div className=\"ui button\">\n          <Link to=\"/categories/new\" className=\"button item\">\n            New Category\n          </Link>\n        </div>\n        <div className=\"ui segment\">{this.renderList()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mapping category to props\", ownProps);\n  console.log(state);\n  return { categories: state.categories };\n};\n\nexport default connect(mapStateToProps, { fetchCategory })(CategoryList);\n","import constants from \"../../constants\";\n\nexport const fetchCategory = (props) => async (dispatch) => {\n  console.log(\"actioning fetchCategory\");\n  //const response = await getCategoruList(props.auth);\n  const response = {\n    data: [\n      { id: 0, name: \"test\" },\n      { id: 1, name: \"test 2\" },\n    ],\n  };\n  dispatch({\n    type: constants.FETCH_CATEGORY_LIST,\n    payload: response.data,\n  });\n};\n","import React from \"react\";\n\nclass CategoryNew extends React.Component {\n  componentDidMount() {\n    console.log(\"mounting Category New\");\n    console.log(this.props);\n  }\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <div className=\"ui raised segment\"> New Category </div>\n        <div className=\"ui raised segment\">\n          <form>\n            <label>Name</label>\n            <input id=\"name\" name=\"name\" />\n            <input type=\"submit\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CategoryNew;\n","import auth0 from \"auth0-js\";\n\nexport default class Auth {\n  constructor(history) {\n    this.history = history;\n    console.log(process.env.REACT_APP_AUTH0_DOMAIN);\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENTID,\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK,\n      audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n\n      responseType: \"token id_token\",\n      scope: \"openid profile email\",\n    });\n  }\n\n  login = () => {\n    this.auth0.authorize();\n  };\n\n  logout = () => {\n    this.clearSession();\n    this.auth0.logout();\n    this.history.push(\"/\");\n  };\n\n  handleAuthentication = () => {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        this.history.push(\"/\");\n      } else if (err) {\n        this.history.push(\"/\");\n        alert(`Error: ${err.error}`);\n        console.log(err);\n      }\n    });\n  };\n\n  setSession = (authResult) => {\n    console.log(authResult);\n    const expiredAt = JSON.stringify(\n      authResult.expiresIn * 1000 + new Date().getTime()\n    );\n\n    localStorage.setItem(\"access_token\", authResult.accessToken);\n    localStorage.setItem(\"id_token\", authResult.idToken);\n    localStorage.setItem(\"expires_at\", expiredAt);\n  };\n\n  clearSession() {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n  }\n\n  isAuthenticated() {\n    if (!localStorage.getItem(\"expires_at\")) {\n      return false;\n    } else {\n      const expiredAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n\n      return new Date().getTime() < expiredAt;\n    }\n  }\n\n  getAccessToken() {\n    const accessToken = localStorage.getItem(\"access_token\");\n    if (!accessToken) {\n      throw new Error(\"no Access Token\");\n    }\n    return accessToken;\n  }\n}\n","import React, { Component } from \"react\";\n//import { Link } from \"react-router-dom\";\n\nclass Callback extends Component {\n  componentDidMount() {\n    if (/access_token|id_token|err/.test(this.props.location.hash)) {\n      this.props.auth.handleAuthentication();\n    } else {\n      throw new Error(\"Invalid callback URL\");\n    }\n  }\n\n  render() {\n    return <div>Loading...</div>;\n  }\n}\n\nexport default Callback;\n","import React, { Component } from \"react\";\nimport TopHeader from \"./components/common/TopHeader\";\nimport Dashboard from \"./components/dashboard/dashboard\";\nimport { Route } from \"react-router-dom\";\n\nimport StoreList from \"./components/store/StoreList\";\nimport StoreCreate from \"./components/store/StoreCreate\";\nimport StoreEdit from \"./components/store/StoreEdit\";\nimport StoreDelete from \"./components/store/StoreDelete\";\n\nimport CategoryList from \"./components/category/categoryList\";\nimport CategoryNew from \"./components/category/categoryNew\";\n\nimport Auth from \"./auth/auth\";\nimport Callback from \"./components/callback\";\n\nclass App extends Component {\n  //function App() {\n  constructor(props) {\n    super(props);\n    this.auth = new Auth(this.props.history);\n  }\n\n  render(props) {\n    return (\n      <div className=\"container\">\n        <TopHeader auth={this.auth} {...props} />\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => <Dashboard auth={this.auth} {...props} />}\n        />\n        <Route\n          path=\"/callback\"\n          exact\n          render={(props) => <Callback auth={this.auth} {...props} />}\n        />\n        <Route\n          path=\"/stores\"\n          exact\n          render={(props) => <StoreList auth={this.auth} {...props} />}\n        />\n        <Route\n          path=\"/stores/new\"\n          exact\n          render={(props) => <StoreCreate auth={this.auth} {...props} />}\n        />\n        <Route\n          path=\"/stores/:StoreId/edit\"\n          exact\n          render={(props) => <StoreEdit auth={this.auth} {...props} />}\n        />\n        <Route\n          path=\"/stores/:StoreId/delete\"\n          exact\n          render={(props) => <StoreDelete auth={this.auth} {...props} />}\n        />\n        <Route\n          path=\"/categories\"\n          exact\n          render={(props) => <CategoryList auth={this.auth} {...props} />}\n        />\n        <Route\n          path=\"/categories/new\"\n          exact\n          render={(props) => <CategoryNew auth={this.auth} {...props} />}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport storeReducers from \"./storeReducers\";\nimport categoryReducers from \"./categoryReducers\";\nimport allstoreReducers from \"./allstoreReducers\";\n\nexport default combineReducers({\n  stores: storeReducers,\n  categories: categoryReducers,\n  allstores: allstoreReducers,\n});\n","import constants from \"../../constants\";\n\nexport default (state = [], action) => {\n  console.log(\"executing store reducers\", state);\n  switch (action.type) {\n    case constants.FETCH_STORE_LIST:\n      return action.payload;\n    case constants.FETCH_STORE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import constants from \"../../constants\";\n\nexport default (state = [], action) => {\n  console.log(\"executing category reducers\");\n  switch (action.type) {\n    case constants.FETCH_CATEGORY_LIST:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import constants from \"../../constants\";\n\nexport default (state = [], action) => {\n  console.log(\"executing all store reducers\", state);\n  switch (action.type) {\n    case constants.FETCH_ALL_STORE: {\n      console.log(\"mapping all stores\", state, action.payload);\n      if (state.items) {\n        let newState = action.payload;\n        newState.items.Items = state.items.Items.concat(\n          action.payload.items.Items\n        );\n\n        console.log(newState);\n      }\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport reducers from \"./redux/reducers\";\n//import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}